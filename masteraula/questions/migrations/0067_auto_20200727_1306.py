# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2020-07-27 16:06
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import taggit.managers
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('taggit', '0002_auto_20150616_2121'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('questions', '0066_bncc'),
    ]

    operations = [
        migrations.CreateModel(
            name='ClassPlanPublication',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(auto_now_add=True)),
                ('name', models.CharField(max_length=200)),
                ('duration', models.PositiveIntegerField(blank=True, null=True)),
                ('phases', models.TextField()),
                ('content', models.TextField(blank=True, null=True)),
                ('guidelines', models.TextField(blank=True, null=True)),
                ('disabled', models.BooleanField(default=False)),
                ('plan_type', models.CharField(blank=True, choices=[('T', 'Traditional'), ('S', 'Station')], max_length=1, null=True)),
                ('activities', models.ManyToManyField(blank=True, related_name='class_plans_act', to='questions.Activity')),
                ('bncc', models.ManyToManyField(blank=True, to='questions.Bncc')),
                ('disciplines', models.ManyToManyField(blank=True, to='questions.Discipline')),
                ('documents', models.ManyToManyField(blank=True, related_name='class_plans_doc', to='questions.Document')),
                ('documents_online', models.ManyToManyField(blank=True, related_name='class_plans_doc_online', to='questions.DocumentOnline')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('tags', taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
                ('teaching_levels', models.ManyToManyField(blank=True, to='questions.TeachingLevel')),
                ('teaching_years', models.ManyToManyField(blank=True, to='questions.TeachingYear')),
                ('topics', models.ManyToManyField(blank=True, to='questions.Topic')),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='ShareClassPlan',
            fields=[
                ('link', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('share_date', models.DateTimeField(auto_now_add=True)),
                ('class_plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='questions.ClassPlanPublication')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='StationMaterial',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description_station', models.TextField()),
                ('activity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='plan_station_activity', to='questions.Activity')),
                ('document', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='plan_station_doc', to='questions.Document')),
                ('document_online', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='plan_station_doc_online', to='questions.DocumentOnline')),
                ('plan', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='stations', to='questions.ClassPlanPublication')),
            ],
        ),
        migrations.AlterModelOptions(
            name='classplan',
            options={},
        ),
    ]
